}
Z
Z <- numeric(nrow(sim2))
for(i in 1:nrow(sim2)){
alpha <- sim2[i,"b_Intercept"] %>% as.numeric()
beta <- sim2[i,"b_x"] %>% as.numeric()
lambda <- exp(after$x*beta + alpha)
bar_Y <- rpois(length(lambda), lambda)
Z[i] <- sum(bar_Y)
}
Z
histogram(Z)
hist(Z)
Z <= 119
mean(Z <= 119)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(ggplot2)
library(dplyr)
library(brms)
load("mandatory3.Rdata")
after <- subset(vanData, law==1)
before <- subset(vanData, law==0)
plot(brm2)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(ggplot2)
library(dplyr)
library(brms)
load("mandatory3.Rdata")
after <- subset(vanData, law==1)
before <- subset(vanData, law==0)
fitted <- glm(y ~ 1, family = poisson("identity"), data = before)
fitted
fitted %>% coef()
ybar <- before$y %>% mean()
n <- nrow(before)
m <- 10000
lambda_sim <- rgamma(m, n*ybar+1, n)
mean(lambda_sim)
quantile(lambda_sim, c(0.025, 0.975))
quantile(rpois(m, 23*lambda_sim), c(0.001,0.01,0.05))
brm1A <- brm(y ~ 1, family=poisson(link="log"), data=before,
warmup = 500, iter = 1500, chains = 4, refresh = 0)
summary <- brm1A %>% summary()
exp(summary$fixed)
brm1A$prior
brm1B <- brm(y ~ 1, family=poisson(), data=before,
prior = c(set_prior("uniform(-1000,1000)",
class="Intercept", lb=-1000, ub=1000)),
warmup = 500, iter = 1500, chains = 4, refresh = 0)
brm1B$prior
brm1B %>% summary()
brm1C <- brm(y ~ 1, family=poisson(link="identity"), data=before,
prior = c(set_prior("uniform(-1000,1000)",
class="Intercept", lb=-1000, ub=1000)),
warmup = 500, iter = 1500, chains = 4, refresh = 0)
brm1C$prior
brm1C %>% summary()
glm(y ~ x, family = poisson("log"), data = before) %>% coef()
brm2 <- brm(y ~ x, family=poisson(link="log"), data=before,
prior = c(set_prior("normal(0,1)", class = "b", coef = "x"),
set_prior("normal(3,25)", class="Intercept")),
warmup = 500, iter = 1500, chains = 4,
refresh=1)
sim2 <- as.data.frame(brm2) %>% tibble()
quantile(sim2$b_x, c(0.025, 0.975)) # -0.004497502 -0.002516153
mean(sim2$b_x) #-0.003501322
Z <- numeric(nrow(sim2))
for(i in 1:nrow(sim2)){
alpha <- sim2[i,"b_Intercept"] %>% as.numeric()
beta <- sim2[i,"b_x"] %>% as.numeric()
lambda <- exp(after$x*beta + alpha)
bar_Y <- rpois(length(lambda), lambda)
Z[i] <- sum(bar_Y)
}
hist(Z)
mean(Z <= 119)
plot(brm2)
summary(brm2)
summary(brm1C)
summary(brm1B)
rhat(brm2)
acf(sim2$b_Intercept)
acf(sim2$b_x)
acf(sim2$b_Intercept)
acf(sim2$b_x)
plot(brm2 , variable = "lp__")
rhat(brm2)
acf(sim2$lp__)
brm2
sim2
sim2$b_Intercept + sim2$b_x
lambdas <- sim2$b_Intercept + sim2$b_x*169
lambdas
sim2$b_x*169
mean(lambdas)
lambdas <- exp(sim2$b_Intercept + sim2$b_x*169)
mean(lambdas)
quantile(lambdas, c(0.025,0.975))
log(e)
log(exp(1))
(log(10)-sim2$b_Intercept)/sim2$b_x
barx <- (log(10)-sim2$b_Intercept)/sim2$b_x
mean(barx)
mean(barx)  %>% round(0)#
quantile(barx, c(0.025,0.975))  %>% round(0)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(ggplot2)
library(dplyr)
library(brms)
load("mandatory3.Rdata")
after <- subset(vanData, law==1)
before <- subset(vanData, law==0)
write("blabla", file = "van.stan")
to_stan <- "data {
to_stan <- "data {
to_stan <- "data {
int N;
vector[N] x;
vector[N] int y;
}
parameters {
real alpha
real beta
}
transformed_parameters{
vector[N] lambda exp(alpha + beta*x)
}
model {
alpha ~ normal(3,25)
beta ~ normal(0,1)
y ~ poisson(lambda)
}
"
to_stan
write(to_stan, file = "van.stan")
library(rstan)
data <- list(x=before$x, y =before$y)
data
fitted <- stan("van.stan", data = data)
to_stan <- "data {
int N;
vector[N] x;
vector[N] int y;
}
parameters {
real alpha;
real beta;
}
transformed_parameters{
vector[N] lambda exp(alpha + beta*x);
}
model {
alpha ~ normal(3,25);
beta ~ normal(0,1);
y ~ poisson(lambda);
}
"
write(to_stan, file = "van.stan")
fitted <- stan("van.stan", data = data)
data <- list(x=before$x, y =before$y)
fitted <- stan("van.stan", data = data)
to_stan <- "data {
int N;
vector[N] x;
int vector[N] y;
}
parameters {
real alpha;
real beta;
}
transformed_parameters{
vector[N] lambda exp(alpha + beta*x);
}
model {
alpha ~ normal(3,25);
beta ~ normal(0,1);
y ~ poisson(lambda);
}
"
write(to_stan, file = "van.stan")
library(rstan)
data <- list(x=before$x, y =before$y)
fitted <- stan("van.stan", data = data)
to_stan <- "data {
int N;
vector[N] x;
vector[N] y;
}
parameters {
real alpha;
real beta;
}
transformed_parameters{
vector[N] lambda exp(alpha + beta*x);
}
model {
alpha ~ normal(3,25);
beta ~ normal(0,1);
y ~ poisson(lambda);
}
"
write(to_stan, file = "van.stan")
library(rstan)
data <- list(x=before$x, y =before$y)
fitted <- stan("van.stan", data = data)
to_stan <- "data {
int N;
vector[N] x;
vector[N] y;
}
parameters {
real alpha;
real beta;
}
transformed_parameters {
vector[N] lambda exp(alpha + beta*x);
}
model {
alpha ~ normal(3,25);
beta ~ normal(0,1);
y ~ poisson(lambda);
}
"
write(to_stan, file = "van.stan")
library(rstan)
data <- list(x=before$x, y =before$y)
fitted <- stan("van.stan", data = data)
to_stan <- "data {
int N;
vector[N] x;
vector[N] y;
}
parameters {
real alpha;
real beta;
}
transformed_parameters {
vector[N] lambda = exp(alpha + beta*x);
}
model {
alpha ~ normal(3,25);
beta ~ normal(0,1);
y ~ poisson(lambda);
}
"
write(to_stan, file = "van.stan")
library(rstan)
data <- list(x=before$x, y =before$y)
fitted <- stan("van.stan", data = data)
to_stan <- "data {
int N;
vector[N] x;
vector[N] y;
}
parameters {
real alpha;
real beta;
}
transformed parameters {
vector[N] lambda = exp(alpha + beta*x);
}
model {
alpha ~ normal(3,25);
beta ~ normal(0,1);
y ~ poisson(lambda);
}
"
write(to_stan, file = "van.stan")
library(rstan)
data <- list(x=before$x, y =before$y)
fitted <- stan("van.stan", data = data)
to_stan <- "data {
int N;
int vector[N] x;
int vector[N] y;
}
parameters {
real alpha;
real beta;
}
transformed parameters {
vector[N] lambda = exp(alpha + beta*x);
}
model {
alpha ~ normal(3,25);
beta ~ normal(0,1);
y ~ poisson(lambda);
}
"
write(to_stan, file = "van.stan")
library(rstan)
data <- list(x=before$x, y =before$y)
fitted <- stan("van.stan", data = data)
to_stan <- "data {
int N;
int x[N];
int y[N];
}
parameters {
real alpha;
real beta;
}
transformed parameters {
vector[N] lambda = exp(alpha + beta*x);
}
model {
alpha ~ normal(3,25);
beta ~ normal(0,1);
y ~ poisson(lambda);
}
"
write(to_stan, file = "van.stan")
library(rstan)
data <- list(x=before$x, y =before$y)
fitted <- stan("van.stan", data = data)
to_stan <- "data {
int N;
x[N];
int y[N];
}
parameters {
real alpha;
real beta;
}
transformed parameters {
vector[N] lambda = exp(alpha + beta*x);
}
model {
alpha ~ normal(3,25);
beta ~ normal(0,1);
y ~ poisson(lambda);
}
"
write(to_stan, file = "van.stan")
library(rstan)
data <- list(x=before$x, y =before$y)
fitted <- stan("van.stan", data = data)
to_stan <- "data {
int N;
vector x[N];
int y[N];
}
parameters {
real alpha;
real beta;
}
transformed parameters {
vector[N] lambda = exp(alpha + beta*x);
}
model {
alpha ~ normal(3,25);
beta ~ normal(0,1);
y ~ poisson(lambda);
}
"
write(to_stan, file = "van.stan")
library(rstan)
data <- list(x=before$x, y =before$y)
fitted <- stan("van.stan", data = data)
to_stan <- "data {
int N;
vector[N] x;
int y[N];
}
parameters {
real alpha;
real beta;
}
transformed parameters {
vector[N] lambda = exp(alpha + beta*x);
}
model {
alpha ~ normal(3,25);
beta ~ normal(0,1);
y ~ poisson(lambda);
}
"
write(to_stan, file = "van.stan")
library(rstan)
data <- list(x=before$x, y =before$y)
fitted <- stan("van.stan", data = data)
length(before$y)
data <- list(x=before$x, y =before$y, N = length(before$y))
fitted <- stan("van.stan", data = data)
fitted
fitted$alpha
fitted$alpha
fitted %>% summary()
fitted %>% summary() %>% as.data.frame()
(fitted %>% summary())$summary %>% as.data.frame()
fitted$summary
(fitted %>% summary())$summary %>% tibble()
(fitted %>% summary())$summary %>% tibble()
results <- (fitted %>% summary())$summary %>% tibble()
resukls
results
results <- (fitted %>% summary())$summary %>% as.data.frame() %>%  tibble()
results
results <- (fitted %>% summary())$summary %>% as.data.frame()
results
results["beta"]
results["beta",]
results["lambda[169]",]
to_stan <- "data {
int N;
vector[N] x;
int y[N];
}
parameters {
real alpha;
real beta;
}
transformed parameters {
vector[N] lambda = exp(alpha + beta*x);
vector[N] bar_x = 1/beta*(log(10)-alpha)
}
model {
alpha ~ normal(3,25);
beta ~ normal(0,1);
y ~ poisson(lambda);
}
"
write(to_stan, file = "van.stan")
library(rstan)
data <- list(x=before$x, y =before$y, N = length(before$y))
fitted <- stan("van.stan", data = data)
to_stan <- "data {
int N;
vector[N] x;
int y[N];
}
parameters {
real alpha;
real beta;
}
transformed parameters {
vector[N] lambda = exp(alpha + beta*x);
vector[N] bar_x = 1/beta*(log(10)-alpha);
}
model {
alpha ~ normal(3,25);
beta ~ normal(0,1);
y ~ poisson(lambda);
}
"
write(to_stan, file = "van.stan")
library(rstan)
data <- list(x=before$x, y =before$y, N = length(before$y))
fitted <- stan("van.stan", data = data)
to_stan <- "data {
int N;
vector[N] x;
int y[N];
}
parameters {
real alpha;
real beta;
}
transformed parameters {
vector[N] lambda = exp(alpha + beta*x);
real bar_x = 1/beta*(log(10)-alpha);
}
model {
alpha ~ normal(3,25);
beta ~ normal(0,1);
y ~ poisson(lambda);
}
"
write(to_stan, file = "van.stan")
library(rstan)
data <- list(x=before$x, y =before$y, N = length(before$y))
fitted <- stan("van.stan", data = data)
to_stan <- "data {
int N;
vector[N] x;
int y[N];
}
parameters {
real alpha;
real beta;
}
transformed parameters {
vector[N] lambda = exp(alpha + beta*x);
real bar_x = 1/beta*(log(10)-alpha);
}
model {
alpha ~ normal(3,25);
beta ~ normal(0,1);
y ~ poisson(lambda);
}
"
write(to_stan, file = "van.stan")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(ggplot2)
library(dplyr)
library(brms)
load("mandatory3.Rdata")
after <- subset(vanData, law==1)
before <- subset(vanData, law==0)
data <- list(x=before$x, y =before$y, N = length(before$y))
fitted <- stan("van.stan", data = data)
results <- (fitted %>% summary())$summary %>% as.data.frame()
results["beta",]
results["lambda[169]",]
results["bar_x"]
results
View(results)
results["bar_x",]
