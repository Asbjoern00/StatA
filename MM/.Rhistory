mod_contr <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData_mod)
mod_contr %>% confint()
lapply
.Internal
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(ggplot2)
library(dplyr)
library(lme4)
library(LabApplStat)
library(readr)
setwd("~/Desktop/statA/MM")
satData <- read_csv("sat.csv",skip = 1) %>% mutate(studid = as.factor(studid), tchrid = as.factor(tchrid), year = as.factor(year))
satData %>% group_by(studid) %>% count() %>% nrow() # 122 students
satData %>% group_by(tchrid) %>% count() %>% nrow() # 12 teachers
satData %>% group_by(studid) %>% count() %>% ungroup() %>% summarise(mean(n))
table(satData$tchrid, satData$year)
mod <- lmer(math ~ year-1 + (1|tchrid) + (1|studid), data = satData)
summary(mod)
rm(list = ls())
library(ggplot2)
library(dplyr)
library(lme4)
library(pbkrtest)
library(LabApplStat)
load("DWBdata.Rdata")
DWBdata
DWBdata %>% select(NameID, WkDay, DWB100,z2sleep)
DWBdata <- DWBdata %>% select(NameID, WkDay, DWB100,z2sleep)
DWBdata
table(nameID)
table(DWBdata$nameID, WkDay)
table(DWBdata$nameID, DWBdata$WkDay)
DWBdata$WkDay
DWBdata$nameID
table(DWBdata$NameID, DWBdata$WkDay)
rho <- 2
matrix(c(1,rho,rho,1), nrow = 2, ncol = 2, byrow = TRUE)
theta_1 <- 0.5
theta_2 <- 0.5
sigma <- 1
rho <- 0.8
knitr::opts_chunk$set(echo = TRUE)
mu <- c(theta_1, theta_2)
sigma <- sigma*matrix(c(1,rho,rho,1), nrow = 2, ncol = 2, byrow = TRUE)
sim <- MASS::mvrnorm(m, mu = mu, sigma = sigma)
sim <- MASS::mvrnorm(m, mu = mu, Sigma = sigma)
m <- 10000
sim <- MASS::mvrnorm(m, mu = mu, Sigma = sigma)
sim
library(MASS)
library(tidyverse)
library(dplyr)
sim[,1]
sim[,2]
tibble(obs = c(sim[,1],sim[,2]))
tibble(obs = c(sim[,1],sim[,2]), type = c(rep(1, m), rep(2,m)), subject = c(seq(1,m), seq(1,m)))
design_sim <- function(m, theta_1, theta_2, sigma, rho){
mu <- c(theta_1, theta_2)
sigma <- sigma*matrix(c(1,rho,rho,1), nrow = 2, ncol = 2, byrow = TRUE)
sim <- MASS::mvrnorm(m, mu = mu, Sigma = sigma)
out <- tibble(obs = c(sim[,1],sim[,2]), type = c(rep(1, m), rep(2,m)), subject = c(seq(1,m), seq(1,m)))
return(out)
}
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(dplyr)
design_sim <- function(m, theta_1, theta_2, sigma, rho){
mu <- c(theta_1, theta_2)
sigma <- sigma*matrix(c(1,rho,rho,1), nrow = 2, ncol = 2, byrow = TRUE)
sim <- MASS::mvrnorm(m, mu = mu, Sigma = sigma)
out <- tibble(obs = c(sim[,1],sim[,2]), type = c(rep(1, m), rep(2,m)), subject = c(seq(1,m), seq(1,m)))
return(out)
}
sim_df <- design_sim(10000, 0.3,0.7, 1, 0.9)
#Check covariance
cov(sim_df %>% select(type == 1), sim_df %>% select(type == 2))
sim_df %>% select(type == 2)
sim_df %>% select(type == 1)
#Check covariance
cov(sim_df %>% filter(type == 1), sim_df %>% filter(type == 2))
#Check covariance
cov(sim_df %>% filter(type == 1) %>% select(obs), sim_df %>% filter(type == 2) %>% select(obs))
sim_df %>% filter(type == 1) %>% select(obs)
sim_df %>% filter(type == 1)
sim_df %>% filter(type == 1) %>% dplyr::select()
sim_df %>% filter(type == 1) %>% dplyr::select(obs)
#Check covariance
cov(sim_df %>% filter(type == 1) %>% dplyr::select(obs), sim_df %>% filter(type == 2) %>% dplyr::select(obs))
#Check individual variances and means
sim_df %>% group_by(type) %>% summarise(var = var(obs), mean = mean(obs))
theta_1 <- 1
sigma <- 0.5
rho <- 0.7
m <- 50
mydata <- design_sim(m, theta_1, theta_2, sigma, rho)
theta_2 <- 1
sigma <- 0.5
rho <- 0.7
m <- 50
mydata <- design_sim(m, theta_1, theta_2, sigma, rho)
design_sim <- function(m, theta_1, theta_2, sigma, rho){
mu <- c(theta_1, theta_2)
sigma <- sigma^2*matrix(c(1,rho,rho,1), nrow = 2, ncol = 2, byrow = TRUE)
sim <- MASS::mvrnorm(m, mu = mu, Sigma = sigma)
out <- tibble(obs = c(sim[,1],sim[,2]), type = c(rep(1, m), rep(2,m)), subject = c(seq(1,m), seq(1,m)))
return(out)
}
theta_1 <- 1
theta_2 <- 1
sigma <- 0.5
rho <- 0.7
m <- 50
mydata <- design_sim(m, theta_1, theta_2, sigma, rho)
lmer(obs~1 + (1|subject), data=mydata)
fit <- lmer(obs~1 + (1|subject), data=mydata)
summary(fit<)
summary(fit)
theta_1 <- 1
theta_2 <- 1
sigma <- 0.5
rho <- 0.7
m <- 500
mydata <- design_sim(m, theta_1, theta_2, sigma, rho)
fit <- lmer(obs~1 + (1|subject), data=mydata)
summary(fit)
theta_1 <- 1
theta_2 <- 1
sigma <- 0.5
rho <- 0.7
m <- 50
mydata <- design_sim(m, theta_1, theta_2, sigma, rho)
fit <- lmer(obs~1 + (1|subject), data=mydata)
summary(fit)
theta_1 <- 1
theta_2 <- 1
sigma <- 0.5
rho <- -0.7
m <- 50
mydata <- design_sim(m, theta_1, theta_2, sigma, rho)
fit <- lmer(obs~1 + (1|subject), data=mydata)
summary(fit)
theta_1 <- 1
theta_2 <- 1
sigma <- 0.5
rho <- -0.7
m <- 50
mydata <- design_sim(m, theta_1, theta_2, sigma, rho)
fit <- lmer(obs~1 + (1|subject), data=mydata)
summary(fit)
gls(obs~1, correlation = corSymm(form=~1|subject), data=mydata)
library(nlme)
gls(obs~1, correlation = corSymm(form=~1|subject), data=mydata)
fit <- gls(obs~1, correlation = corSymm(form=~1|subject), data=mydata)
fit <- gls(obs~1, correlation = corSymm(form=~1|subject), data=mydata)
summary(fit)
1.7/400
sqrt(1.7/400)
sqrt(0.7/400)
0.7/400
mydata
reduced <- mydata %>% filter(type == 1)
lm(obs ~ 1, data = reduced)
reduced_mod <- lm(obs ~ 1, data = reduced)
summary(reduced_mod)
0.5/sqrt(50)
mydata <- design_sim(m, theta_1, theta_2, sigma, rho)
mydata <- design_sim(m, theta_1, theta_2, sigma, rho)
mydata_reduced <- design_sim(k, theta_1, theta_2, sigma, rho)
theta_1 <- 1
theta_2 <- 1
sigma <- 0.5
rho <- -0.7
m <- 50
k <- round(2*m/(1+rho))
mydata <- design_sim(m, theta_1, theta_2, sigma, rho)
mydata_reduced <- design_sim(k, theta_1, theta_2, sigma, rho)
reduced_mod <- lm(obs ~ 1, data = mydata_reduced)
fit <- lmer(obs~1 + (1|subject), data=mydata)
fit
summary(fit)
reduced_mod
reduced_mod$coefficients
reduced_mod$std
reduced_mod
summary(reduced_mod)
bah <- summary(reduced_mod)
bah$coefficients
bah$coefficients["Std. Error"]
bah$coefficients[,"Std. Error"]
reduced_mod <- lm(obs ~ 1, data = mydata_reduced)
reduced_mod
reduced_mod %>% summary()
sum_reduced <-summary(reduced_mod)
n <- 1000
reduced_res <- numeric(n)
full_res <- numeric(n)
mydata <- design_sim(m, theta_1, theta_2, sigma, rho)
mydata_reduced <- design_sim(k, theta_1, theta_2, sigma, rho)
reduced_mod <- lm(obs ~ 1, data = mydata_reduced)
sum_reduced <-summary(reduced_mod)
sum_reduced$coefficients[,"Std.Error"]
sum_reduced$coefficients[,"Std. Error"]
fit <- lmer(obs~1 + (1|subject), data=mydata)
rho <- 0.7
fit <- lmer(obs~1 + (1|subject), data=mydata)
fit %>% summary()
full_sum <- fit %>% summary()
full_sum$coefficients
full_sum$coefficients["Std. Error"]
full_sum$coefficients[,"Std. Error"]
for (i in 1:n){
mydata <- design_sim(m, theta_1, theta_2, sigma, rho)
mydata_reduced <- design_sim(k, theta_1, theta_2, sigma, rho)
reduced_mod <- lm(obs ~ 1, data = mydata_reduced)
sum_reduced <-summary(reduced_mod)
reduced_res[i] <- sum_reduced$coefficients[,"Std. Error"]
fit <- lmer(obs~1 + (1|subject), data=mydata)
full_sum <- fit %>% summary()
full_res[i] <- full_sum$coefficients[,"Std. Error"]
}
full_res
reduced_res
mean(full_res)
mean(reduced_res)
k
reduced_mod <- lm(obs ~ 1, data = mydata_reduced)
sum_reduced <-summary(reduced_mod)
sum_reduced
fit <- lmer(obs~1 + (1|subject), data=mydata)
full_sum <- fit %>% summary()
full_sum
mydata_reduced
theta_1 <- 1
theta_2 <- 1
sigma <- 0.5
rho <- 0.7
m <- 50
k <- round(2*m/(1+rho))
n <- 1000
reduced_res <- numeric(n)
full_res <- numeric(n)
for (i in 1:n){
mydata <- design_sim(m, theta_1, theta_2, sigma, rho)
mydata_reduced <- design_sim(k, theta_1, theta_2, sigma, rho) %>% filter(type == 1)
reduced_mod <- lm(obs ~ 1, data = mydata_reduced)
sum_reduced <-summary(reduced_mod)
reduced_res[i] <- sum_reduced$coefficients[,"Std. Error"]
fit <- lmer(obs~1 + (1|subject), data=mydata)
full_sum <- fit %>% summary()
full_res[i] <- full_sum$coefficients[,"Std. Error"]
}
mean(full_res) - mean(reduced_res)
setwd("~/Desktop/statA/MM")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(ggplot2)
library(dplyr)
library(lme4)
library(LabApplStat)
library(readr)
setwd("~/Desktop/statA/MM")
load("FtestData.Rdata")
FtestData
DD(~ID + Treatment, data = FtestData)
DD(~ID + Treatment, data = FtestData) %>% plot()
FtestData$ID <- as.factor(FtestData$ID)
DD(~ID + Treatment, data = FtestData) %>% plot()
meandata <-
FtestData %>%
group_by(ID,Treatment) %>%
summarize(m = mean(y))
lm(m ~ Treatment, meandata) %>% drop1(test="F")
m1 <- lmer(y ~ Treatment + (1|ID), data=FtestData)
m1 %>% drop1(test="Chisq")
install.packages("lmerTest")
lmerTest::lmer(y ~ Treatment + (1|ID), data=FtestData) %>% drop1()
m1ML <- lmer(y ~ Treatment + (1|ID), data=FtestData, REML=FALSE)
m2ML <- lmer(y ~ 1 + (1|ID), data=FtestData, REML=FALSE)
pbkrtest::PBmodcomp(m1ML,m2ML)
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(dplyr)
design_sim <- function(m, theta_1, theta_2, sigma, rho){
mu <- c(theta_1, theta_2)
sigma <- sigma^2*matrix(c(1,rho,rho,1), nrow = 2, ncol = 2, byrow = TRUE)
sim <- MASS::mvrnorm(m, mu = mu, Sigma = sigma)
out <- tibble(obs = c(sim[,1],sim[,2]), type = c(rep(1, m), rep(2,m)), subject = c(seq(1,m), seq(1,m)))
return(out)
}
design_sim()
design_sim
design_sim(m, theta1, theta2, sigma, rho)
m <- 50
theta1 <- 1
theta2 <- 0
sigma <- 0.5
rho <- 0.7
design_sim(m, theta1, theta2, sigma, rho)
mydata3 <- design_sim(m, theta1, theta2, sigma, rho)
gls(obs~factor(type), data=mydata3,
gls(obs~factor(type), data=mydata3, correlation = corSymm(form=~1|subject))
nlme::gls(obs~factor(type), data=mydata3, correlation = corSymm(form=~1|subject))
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(dplyr)
library(nlme)
gls(obs~factor(type), data=mydata3, correlation = corSymm(form=~1|subject))
m <- 5000
mydata3 <- design_sim(m, theta1, theta2, sigma, rho)
gls(obs~factor(type), data=mydata3, correlation = corSymm(form=~1|subject))
m <- 50
lmer_fit <- lmer(obs~factor(type) + (1|subject), data=mydata3)
library(lmer4)
library(lme4)
gls_fit <- gls(obs~factor(type), data=mydata3, correlation = corSymm(form=~1|subject))
gls_fit <- gls(obs~factor(type), data=mydata3, correlation = corSymm(form=~1|subject))
lmer_fit <- lmer(obs~factor(type) + (1|subject), data=mydata3)
lmer()
lmer_fit
summary(gls)
summary(gls_fit)
m <- 50
theta1 <- 1
theta2 <- 0
sigma <- 0.5
rho <- 0.7
mydata3 <- design_sim(m, theta1, theta2, sigma, rho)
gls_fit <- gls(obs~factor(type), data=mydata3, correlation = corSymm(form=~1|subject))
lmer_fit <- lmer(obs~factor(type) + (1|subject), data=mydata3)
summary(gls_fit)
2*(0.7)^2*(1-0.7)/50
gls_fit
lmer_fit
summary(lmer_fit)
0.16053  + 0.08921
m <- 50
theta1 <- 1
theta2 <- 0
sigma <- 0.5
rho <- 0.7
mydata3 <- design_sim(m, theta1, theta2, sigma, rho)
gls_fit <- gls(obs~factor(type), data=mydata3, correlation = corSymm(form=~1|subject))
gls
gls_fit
summary(gls_fit)
m <- 50
theta1 <- 1
theta2 <- 0
sigma <- 0.5
rho <- -0.7
mydata3 <- design_sim(m, theta1, theta2, sigma, rho)
gls_fit <- gls(obs~factor(type), data=mydata3, correlation = corSymm(form=~1|subject))
gls_fit
gls_fit %>% summary()
m <- 50
theta1 <- 1
theta2 <- 0
sigma <- 0.5
rho <- -0.7
mydata3 <- design_sim(m, theta1, theta2, sigma, rho)
gls_fit <- gls(obs~factor(type), data=mydata3, correlation = corSymm(form=~1|subject))
gls_fit %>% summary()
m <- 50
theta1 <- 1
theta2 <- 0
sigma <- 0.5
rho <- 0
mydata3 <- design_sim(m, theta1, theta2, sigma, rho)
mydata
mydata3
lm(obs ~ factor(type), data = mydata3)
fit_lm <- lm(obs ~ factor(type), data = mydata3)
summary(fit_lm)
sqrt(2)*0.5/50
sqrt(2)*0.5/sqrt(50)
m <- 50
theta1 <- 1
theta2 <- 0
sigma <- 0.5
rho <- 0
mydata3 <- design_sim(m, theta1, theta2, sigma, rho)
fit_lm <- lm(obs ~ factor(type), data = mydata3)
summary(fit_lm)
m <- 50
theta1 <- 1
theta2 <- 0
sigma <- 0.5
rho <- 0
mydata3 <- design_sim(m, theta1, theta2, sigma, rho)
fit_lm <- lm(obs ~ factor(type), data = mydata3)
summary(fit_lm)
mydata3 <- design_sim(m, theta1, theta2, sigma, rho)
mydata3$type <- as.factor(mydata3$type)
fit_lm <- lm(obs ~ factor(type), data = mydata3)
summary(fit_lm)
fit_lm <- lm(obs ~ factor(type)-1, data = mydata3)
summary(fit_lm)
fit_lm <- lm(obs ~ type, data = mydata3)
summary(fit_lm)
fit_lm <- lm(obs ~ type-1, data = mydata3)
summary(fit_lm)
fit_lm <- lm(obs ~ type-1, data = mydata3)
summary(fit_lm)
fit_lm <- lm(obs ~ type, data = mydata3)
summary(fit_lm)
mydata3$type <- factor(mydata3$type, levels = c(2,1))
fit_lm <- lm(obs ~ type, data = mydata3)
summary(fit_lm)
m <- 50
theta1 <- 1
theta2 <- 0
sigma <- 0.5
rho <- 0
mydata3 <- design_sim(m, theta1, theta2, sigma, rho)
mydata3$type <- factor(mydata3$type, levels = c(2,1))
fit_lm <- lm(obs ~ type, data = mydata3)
summary(fit_lm)
m <- 50
theta1 <- 1
theta2 <- 0
sigma <- 0.5
rho <- 0
mydata3 <- design_sim(m, theta1, theta2, sigma, rho)
mydata3$type <- factor(mydata3$type, levels = c(2,1))
fit_lm <- lm(obs ~ type, data = mydata3)
summary(fit_lm)
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(dplyr)
library(nlme)
library(lme4)
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(MASS)
library(dplyr)
library(nlme)
library(lme4)
oats
df <- oats
df
df <- oats %>% tibble()
df
?oats
df <- df %>% mutate(P = B:V)
df
library(LabApplStat)
design <- DD(~V+N)
design <- DD(~V*N, data = df)
plot(design)
design <- DD(~V*N, ~(1|B) + (1|P),data = df)
design <- DD(~V*N + (1|B) + (1|P),data = df)
design <- DD(~V*N  + B +  P,data = df)
plot(design)
lmer(~V*N  + (1|B) +  (1|P), data = df)
lmer(Y~V*N  + (1|B) +  (1|P), data = df)
fit <- lmer(Y~V*N  + (1|B) +  (1|P), data = df)
plot(fit)
fit0 <- lmer(Y~V + N  + (1|B) +  (1|P), data = df)
anova(fit0,fit)
drop1(fit)
drop1(fit, test = "Chisq")
summary(fit0)
VarCorr(fit0)
pbkrtest::PBmodcomp(fit0, fit_null)
fit_null <- lmer(Y~V + N  + (1|B) +  (1|P), data = df)
pbkrtest::PBmodcomp(fit0, fit_null)
fit_null <- lmer(Y~ V + (1|B) +  (1|P), data = df)
pbkrtest::PBmodcomp(fit0, fit_null)
df <- df %>% mutate(Nnum = as.numeric(substr(N,1,3)))
df
df$Nnum2 <- df$Nnum^2
df <- df %>% mutate(Nnum = as.numeric(substr(N,1,3)))
df$Nnum2 <- df$Nnum^2
m2 <- lmer(Y ~ N + V + (1|P) + (1|B), data=df)
m3 <- lmer(Y ~ Nnum + V + (1|P) + (1|B), data=df)
m3sq
m3sq <-lmer(Y ~ Nnum + Nnum2 + V + (1|P) + (1|B), data=df)
anova(m3, m3sq)
m4 <- lmer(Y ~ Nnum + V + (Nnum||P), data=oats)
m5 <- lmer(Y ~ Nnum + V + (Nnum||B), data=oats)
m6 <- lmer(Y ~ Nnum + V + (Nnum||P) + (Nnum||B), data=oats)
m4 <- lmer(Y ~ Nnum + V + (Nnum||P), data=df)
m5 <- lmer(Y ~ Nnum + V + (Nnum||B), data=df)
m6 <- lmer(Y ~ Nnum + V + (Nnum||P) + (Nnum||B), data=df)
m6
m3
m6
VarCorr(m3)
VarCorr(lmer(Y ~ Nnum + V + (Nnum||P), data=df))
VarCorr(lmer(Y ~ Nnum + V + (Nnum|P), data=df))
VarCorr(lmer(Y ~ Nnum + V + (Nnum|P), data=df))
VarCorr(lmer(Y ~ Nnum + V + (Nnum|P), data=df))
plot(m2)
plot(m3)
plot(m4)
plot(m3sq)
m3sq
df
m3sq
m3sq["Nnum2"]
m3sq$coeff["Nnum2"]
m3sq %>% fixef()
m3sq %>% fixef()["Nnum2"]
(m3sq %>% fixef())["Nnum2"]
(m3sq %>% fixef())["Nnum2"]*0.1² +
(m3sq %>% fixef())["Nnum2"]*0.1²
(m3sq %>% fixef())["Nnum2"]*0.1^2
(m3sq %>% fixef())["Nnum2"]*0.1^2 + (m3sq %>% fixef())["Nnum"]*0.1
((m3sq %>% fixef())["Nnum2"]*0.1^2 + (m3sq %>% fixef())["Nnum"]*0.1) %>% unname()
