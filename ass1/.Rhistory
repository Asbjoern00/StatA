linmod_improper <- lm(Y ~ X, data = dat1)
summary(linmod_improper)
lm_fixed <-  lm( Y ~ Unit + X, data=dat1)
lm_fixed
summary(lm_fixed)
X
model.matrix(linmod_improper)
model.matrix(lm_fixed)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(ggplot2)
library(dplyr)
library(lme4)
setwd("~/Desktop/statA/MM")
load("tvdata.Rdata")
mydata <- select(TVbo, Assessor, TVset, Picture, Sharpnessofmovement)
mydata <- mutate(mydata, Product=TVset:Picture, Pair=Assessor:Product)
mydata %>% summary()
mydata
mydata %>% summary()
meanData1 <- mydata %>%
group_by(Assessor,Picture,TVset) %>%
summarize(m=mean(Sharpnessofmovement))
meanData1
96*2
meanData1 %>%
ggplot(aes(x=Picture:TVset, y=m, group=Assessor, col=Assessor)) +
geom_line()
install.packages("LabApplStat")
library(LabApplStat)
DD(data = mydata)
mydata
DD(~TVset + Picture + Assesor + Pair, data = mydata)
DD(~TVset + Picture + Assessor + Pair, data = mydata)
dd <- DD(~TVset + Picture + Assessor + Pair, data = mydata)
plot(dd)
lmer1 <- lmer(Sharpnessofmovement ~ TVset+Picture + (1|Assessor) +(1|Pair),
data=mydata)
lmer1 %>% plot()
summarise(lmer1)
summary(lmer1)
lmer
lmer1
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(ggplot2)
library(dplyr)
library(lme4)
library(LabApplStat)
library(readr)
setwd("~/Desktop/statA/MM")
satData <- read_csv("sat.csv",skip = 1) %>% mutate(studid = as.factor(studid), tchrid = as.factor(tchrid), year = as.factor(year))
df
satData
satData_mod <- satData
satData_mod$year <- factor(satData_mod$year, levels = c("0","-1","1"))
mod_contr <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData_mod)
mod_contr
mod_contr %>% confint()
mod
mod <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData)
mod
18.35 + 28.80 + 15.44
(18.35 + 28.80 + 15.44)^2
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(ggplot2)
library(dplyr)
library(lme4)
library(LabApplStat)
library(readr)
setwd("~/Desktop/statA/MM")
satData <- read_csv("sat.csv",skip = 1) %>% mutate(studid = as.factor(studid), tchrid = as.factor(tchrid), year = as.factor(year))
satData %>% group_by(studid) %>% count() %>% nrow() # 122 students
satData %>% group_by(tchrid) %>% count() %>% nrow() # 12 teachers
satData %>% group_by(studid) %>% count() %>% ungroup() %>% summarise(mean(n))
table(satData$tchrid, satData$year)
plot(DD(~studid+tchrid + year,  data = satData))
mod <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData)
summary(mod)
mod %>% confint()
drop1(mod, test = "Chisq")
satData_mod <- satData
satData_mod$year <- factor(satData_mod$year, levels = c("0","-1","1"))
mod_contr <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData_mod)
mod_contr %>% confint()
VarCorr(mod)
18.352/62.59^2
18.352^2/62.59^2
28.805^2/62.59^2
mod_REML <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData)
mod_ML <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData, REML = FALSE)
summarise(mod_REML)
summary(mod_REML)
summary(mod_ML)
VarCorr(mod_ML)
VarCorr(mod_ML) %>% as.data.frame()
VarCorr(mod_ML) %>% data.frame()
mod_ML
simulate(ML)
simulate(mod_ML)
simulate(mod_ML, 2000)
# Simulate n = 2000 datasets
data_sets <- simulate(mod_ML, 2000)
data_sets
data_sets[0]
data_sets[1]
data_sets[2]
data_sets[3]
lapply(datasets, mean)
lapply(data_sets, mean)
data_sets
data_sets[1]
data_sets[,1]
data_sets[,2]
data_sets[,3]
data_sets[[1]]
data_sets
data_sets[[0]]
data_sets[1]
data_sets[1][1]
data_sets[1][[1]]
data_sets[2][[1]]
data_sets[2][[2]]
VarCorr(mod_REML)
VarCorr(mod_REML) %>% tibble()
VarCorr(mod_REML) %>% data.frame() %>%  tibble()
VarCorr(mod_REML) %>% data.frame() %>%  tibble()
VarCorr(mod_REML) %>% data.frame() %>%  tibble() %>% select(grp, sdcor)
VarCorr(mod_REML) %>% data.frame() %>%  tibble() %>% select(grp, sdcor) %>% mutate(type = "REML")
get_sd_estim <- function(dataset){
#Update response
satData$math <- dataset[[1]]
#Fit models
mod_REML <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData)
mod_ML <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData, REML = FALSE)
# Get dataframes for params
reml <- VarCorr(mod_REML) %>% data.frame() %>%  tibble() %>%
select(grp, sdcor) %>% mutate(type = "REML")
ml <- VarCorr(mod_REML) %>% data.frame() %>%  tibble() %>%
select(grp, sdcor) %>% mutate(type = "ML")
return(bind_rows(reml,ml))
}
lapply(data_sets, get_sd_estim)
satData_copy <- satData
# Simulate n = 2000 datasets
data_sets <- simulate(mod_ML, 2000)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(ggplot2)
library(dplyr)
library(lme4)
library(LabApplStat)
library(readr)
setwd("~/Desktop/statA/MM")
satData <- read_csv("sat.csv",skip = 1) %>% mutate(studid = as.factor(studid), tchrid = as.factor(tchrid), year = as.factor(year))
satData %>% group_by(studid) %>% count() %>% nrow() # 122 students
satData %>% group_by(tchrid) %>% count() %>% nrow() # 12 teachers
satData %>% group_by(studid) %>% count() %>% ungroup() %>% summarise(mean(n))
table(satData$tchrid, satData$year)
plot(DD(~studid+tchrid + year,  data = satData))
mod <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData)
summary(mod)
mod %>% confint()
drop1(mod, test = "Chisq")
satData_mod <- satData
satData_mod$year <- factor(satData_mod$year, levels = c("0","-1","1"))
mod_contr <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData_mod)
mod_contr %>% confint()
mod_REML <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData)
mod_ML <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData, REML = FALSE)
summary(mod_REML)
summary(mod_ML)
# Simulate n = 2000 datasets
data_sets <- simulate(mod_ML, 2000)
satData_copy <- satData
satData
data_sets[1]
dataset <- data_sets[1]
#Update response
satData_copy$math <- dataset[[1]]
satData_copy
#Fit models
mod_REML <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData_copy)
mod_ML <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData_copy, REML = FALSE)
# Get dataframes for params
reml <- VarCorr(mod_REML) %>% data.frame() %>%  tibble() %>%
select(grp, sdcor) %>% mutate(type = "REML")
ml <- VarCorr(mod_REML) %>% data.frame() %>%  tibble() %>%
select(grp, sdcor) %>% mutate(type = "ML")
reml
ml
# Simulate n = 200 datasets
data_sets <- simulate(mod_ML, 200)
satData_copy <- satData
get_sd_estim <- function(dataset){
#Update response
satData_copy$math <- dataset[[1]]
#Fit models
mod_REML <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData_copy)
mod_ML <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData_copy, REML = FALSE)
# Get dataframes for params
reml <- VarCorr(mod_REML) %>% data.frame() %>%  tibble() %>%
select(grp, sdcor) %>% mutate(type = "REML")
ml <- VarCorr(mod_ML) %>% data.frame() %>%  tibble() %>%
select(grp, sdcor) %>% mutate(type = "ML")
return(bind_rows(reml,ml))
}
lapply(data_sets, get_sd_estim)
for(dataset in data_sets){
test <- get_sd_estim(dataset)
}
# Simulate n = 200 datasets
data_sets <- simulate(mod_ML, 200)
satData_copy <- satData
get_sd_estim <- function(dataset){
#Update response
satData_copy$math <- dataset[[1]]
#Fit models
mod_REML <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData_copy)
mod_ML <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData_copy, REML = FALSE)
# Get dataframes for params
reml <- VarCorr(mod_REML) %>% data.frame() %>%  tibble() %>%
select(grp, sdcor) %>% mutate(type = "REML")
ml <- VarCorr(mod_ML) %>% data.frame() %>%  tibble() %>%
select(grp, sdcor) %>% mutate(type = "ML")
return(bind_rows(reml,ml))
}
res <- lapply(data_sets, get_sd_estim)
res
res[[1]]
satData_copy
dataset[[1]]
dataset[1]
dataset
get_sd_estim <- function(dataset){
#Update response
satData_copy$math <- dataset
#Fit models
mod_REML <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData_copy)
mod_ML <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData_copy, REML = FALSE)
# Get dataframes for params
reml <- VarCorr(mod_REML) %>% data.frame() %>%  tibble() %>%
select(grp, sdcor) %>% mutate(type = "REML")
ml <- VarCorr(mod_ML) %>% data.frame() %>%  tibble() %>%
select(grp, sdcor) %>% mutate(type = "ML")
return(bind_rows(reml,ml))
}
res <- lapply(data_sets, get_sd_estim)
res
do.call(res, bind_rows())
bind_rows(res)
# Simulate n = 2000 datasets
data_sets <- simulate(mod_ML, 2000)
satData_copy <- satData
get_sd_estim <- function(dataset){
#Update response
satData_copy$math <- dataset
#Fit models
mod_REML <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData_copy)
mod_ML <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData_copy, REML = FALSE)
# Get dataframes for params
reml <- VarCorr(mod_REML) %>% data.frame() %>%  tibble() %>%
select(grp, sdcor) %>% mutate(type = "REML")
ml <- VarCorr(mod_ML) %>% data.frame() %>%  tibble() %>%
select(grp, sdcor) %>% mutate(type = "ML")
return(bind_rows(reml,ml))
}
res <- lapply(data_sets, get_sd_estim) %>% bind_rows()
res
res %>% group_by(grp, type) %>% summarise(mean)
res %>% group_by(grp, type) %>% summarise(mean(sdcor))
res %>% group_by(grp, type) %>% summarise(estim = mean(sdcor))
VarCorr()
VarCorr(mod_ML)
VarCorr(mod_ML) %>% tibble()
VarCorr(mod_ML) %>% data.frame() %>% tibble()
VarCorr(mod_ML) %>% data.frame() %>% tibble() %>% select(grp, sdcor)
VarCorr(mod_ML) %>% data.frame() %>% tibble() %>% select(grp, sdcor) %>% rename(sdcor = "true")
VarCorr(mod_ML) %>% data.frame() %>% tibble() %>% select(grp, sdcor) %>% rename(true = "sdcor")
estims <- res %>% group_by(grp, type) %>% summarise(estim = mean(sdcor))
left_join(estims, parms)
parms <- VarCorr(mod_ML) %>% data.frame() %>% tibble() %>% select(grp, sdcor) %>% rename(true = "sdcor")
left_join(estims, parms)
compare <- left_join(estims, parms) %>% mutate(abs_dev = abs(estim-true))
compare
res
res %>% ggplot(aes(x = sdcor)) +geom_histogram()
res %>% ggplot(aes(x = sdcor)) + geom_histogram() +theme_bw()
res
res %>% ggplot(aes(x = sdcor)) + geom_histogram() + facet_wrap(~grp+type) + theme_bw()
res %>% ggplot(aes(x = sdcor)) + geom_histogram() + facet_wrap(~type+grp) + theme_bw()
confint(mod_ML)
confint(mod_ML, type = "Wald")
confint(mod_ML, method = "Wald")
confint(mod_ML, method = "Wald") %>% tibble()
confint(mod_ML, method = "Wald") %>% data.frame() %>% tibble()
confint(mod_ML, method = "Wald")
confint(mod_ML, method = "Wald")[,1]
confint(mod_ML, method = "Wald")[,2]
mod_ML
mod_ML %>% fixef()
ML_param <- mod_ML %>% fixef()
REML_param <- mod_REML %>% fixef()
ML_param
confint(mod_ML, method = "Wald")[,1]
confint(mod_ML, method = "Wald")[,1][names(ML_param)]
confint(mod_ML, method = "Wald")[,1][names(ML_param)] <= ML_param
dataset
#Update response
satData_copy$math <- dataset
#Fit models
mod_REML <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData_copy)
mod_ML <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData_copy, REML = FALSE)
#Check contained in confidence intervals
ml_low <- confint(mod_ML, method = "Wald")[,1][names(ML_param)] <= ML_param
ml_high <- confint(mod_ML, method = "Wald")[,2][names(ML_param)] <= ML_param
reml_high <- confint(mod_REML, method = "Wald")[,2][names(ML_param)] >= ML_param
ml_res <- ml_low*ml_high
reml_res <- reml_low*reml_high
reml_low <- confint(mod_REML, method = "Wald")[,1][names(ML_param)] >= ML_param
reml_res <- reml_low*reml_high
ml_res
#Check contained in confidence intervals
ml_low <- confint(mod_ML, method = "Wald")[,1][names(ML_param)] <= ML_param
ml_high <- confint(mod_ML, method = "Wald")[,2][names(ML_param)] <= ML_param
reml_low <- confint(mod_REML, method = "Wald")[,1][names(ML_param)] >= ML_param
reml_high <- confint(mod_REML, method = "Wald")[,2][names(ML_param)] >= ML_param
ml_low
ml_high
ml_high
confint(mod_ML, method = "Wald")[,2][names(ML_param)]
ML_param
ml_low <- confint(mod_ML, method = "Wald")[,1][names(ML_param)] <= ML_param
ml_high <- confint(mod_ML, method = "Wald")[,2][names(ML_param)] >= ML_param
reml_low <- confint(mod_REML, method = "Wald")[,1][names(ML_param)] <= ML_param
reml_high <- confint(mod_REML, method = "Wald")[,2][names(ML_param)] >= ML_param
ml_res <- ml_low*ml_high
ml_res
reml_res <- reml_low*reml_high
reml_res
reml_res %>% tibble()
res
ml_res
df_ml <- tibble(covers = ml_res, parameter = names(ml_res), type = "ML")
df_reml <- tibble(covers = reml_res, parameter = names(reml_res), type = "REML")
df_ml
bind_rows(df_ml, df_reml)
df_ml <- tibble(covers = ml_res, parameter = names(ml_res), type = "ML")
df_reml <- tibble(covers = reml_res, parameter = names(reml_res), type = "REML")
bind_rows(df_ml, df_reml)
abe <- bind_rows(df_ml, df_reml)
abe
ML_param <- mod_ML %>% fixef()
REML_param <- mod_REML %>% fixef()
get_coverage_estim <- function(dataset){
#Update response
satData_copy$math <- dataset
#Fit models
mod_REML <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData_copy)
mod_ML <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData_copy, REML = FALSE)
#Check contained in confidence intervals
ml_confint <- confint(mod_ML, method = "Wald")
ml_low <- ml_confint[,1][names(ML_param)] <= ML_param
ml_high <- ml_confint[,2][names(ML_param)] >= ML_param
reml_confint <- confint(mod_REML, method = "Wald")
reml_low <- reml_confint[,1][names(ML_param)] <= ML_param
reml_high <- reml_confint[,2][names(ML_param)] >= ML_param
ml_res <- ml_low*ml_high
reml_res <- reml_low*reml_high
df_ml <- tibble(covers = ml_res, parameter = names(ml_res), type = "ML")
df_reml <- tibble(covers = reml_res, parameter = names(reml_res), type = "REML")
return(bind_rows(df_ml, df_reml))
}
cov_res <- lapply(data_sets, get_sd_estim) %>% bind_rows()
#compute the coverage
estim_cov <- cov_res %>% group_by(type,parameter) %>% summarize(coverage = mean(covers))
cov_res
cov_res <- lapply(data_sets, get_coverage_estim) %>% bind_rows()
cov_res
#compute the coverage
estim_cov <- cov_res %>% group_by(type,parameter) %>% summarize(coverage = mean(covers))
estim_cov
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(ggplot2)
library(dplyr)
library(lme4)
setwd("~/Desktop/statA/MM")
load("tvdata.Rdata")
mydata <- select(TVbo, Assessor, TVset, Picture, Sharpnessofmovement)
mydata <- mutate(mydata, Product=TVset:Picture, Pair=Assessor:Product)
mydata %>% summary()
meanData1 <- mydata %>%
group_by(Assessor,Picture,TVset) %>%
summarize(m=mean(Sharpnessofmovement))
meanData1 %>%
ggplot(aes(x=Picture:TVset, y=m, group=Assessor, col=Assessor)) +
geom_line()
library(LabApplStat)
dd <- DD(~TVset + Picture + Assessor + Pair, data = mydata)
plot(dd)
lmer1 <- lmer(Sharpnessofmovement ~ TVset+Picture + (1|Assessor) +(1|Pair),
data=mydata)
lmer1 %>% plot()
summary(lmer1)
\rho = \frac{2.174 + 1.380}{7.286} = 0.49
load("DWBdata.Rdata")
load("DWBdata.Rdata")
setwd("~/Desktop/statA/ass1")
rm(list = ls())
library(ggplot2)
library(dplyr)
library(lme4)
library(pbkrtest)
load("DWBdata.Rdata")
DWBdata
DWBdata %>% select(NameID, WkDay)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(ggplot2)
library(dplyr)
library(lme4)
library(LabApplStat)
library(readr)
setwd("~/Desktop/statA/MM")
satData <- read_csv("sat.csv",skip = 1) %>% mutate(studid = as.factor(studid), tchrid = as.factor(tchrid), year = as.factor(year))
satData_mod <- satData
satData_mod$year <- factor(satData_mod$year, levels = c("0","-1","1"))
mod_contr <- lmer(math ~ year + (1|tchrid) + (1|studid), data = satData_mod)
mod_contr %>% confint()
lapply
.Internal
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(ggplot2)
library(dplyr)
library(lme4)
library(LabApplStat)
library(readr)
setwd("~/Desktop/statA/MM")
satData <- read_csv("sat.csv",skip = 1) %>% mutate(studid = as.factor(studid), tchrid = as.factor(tchrid), year = as.factor(year))
satData %>% group_by(studid) %>% count() %>% nrow() # 122 students
satData %>% group_by(tchrid) %>% count() %>% nrow() # 12 teachers
satData %>% group_by(studid) %>% count() %>% ungroup() %>% summarise(mean(n))
table(satData$tchrid, satData$year)
mod <- lmer(math ~ year-1 + (1|tchrid) + (1|studid), data = satData)
summary(mod)
knitr::opts_chunk$set(echo = TRUE)
load("DWBdata.Rdata")
fit1 <- lmer(DWB100 ~ WkDay + z2sleep + (z2sleep|NameID), data = DWBdata)
knitr::opts_chunk$set(echo = TRUE)
library(lme4)
fit1 %>% coef()
coef(fit1)
fit1 <- lmer(DWB100 ~ WkDay + z2sleep + (z2sleep|NameID), data = DWBdata)
summary(fit1)
coef(fit1)
fixef(fit1)
M <- 2e3
X <- fit2 %>% model.matrix()
library(dplyr)
M <- 2e3
X <- fit2 %>% model.matrix()
library(dplyr)
fit2 <- lmer(DWB100 ~ WkDay + z2sleep + (1|NameID), data = DWBdata)
M <- 2e3
X <- fit2 %>% model.matrix()
Z <- fit2 %>% getME(name="Z")
beta <- fixef(fit2)
tau <- (VarCorr(fit2) %>% as.data.frame())$sdcor[1]
sigma <- (VarCorr(fit2) %>% as.data.frame())$sdcor[2]
resMat <- matrix(NA,M,3)
for (i in 1:M) {
B <- rnorm(27, 0, tau)
eps <- rnorm(nrow(DWBdata), 0, sigma)
y <- X %*% beta + Z %*% B + eps
simdata <- DWBdata
simdata$y <- as.numeric(y)
lmm <- lmer(y ~ WkDay + z2sleep + (1|NameID), data = simdata)
resMat[i,1] <- fixef(lmm)[8]
resMat[i,2:3] <- confint(lmm,method="Wald")[10,]
print(i)
}
resData <- data.frame(resMat)
names(resData) <- c("est","lower","upper")
resData
knitr::opts_chunk$set(echo = TRUE)
library(lme4)
library(dplyr)
library(ggplot2)
resData %>% mutate(cover = (beta[8] > lower)*(beta[8] < upper)) %>% summarise(mean(cover))
resData
beta
resData %>% mutate(cover = (beta[8] > lower)*(beta[8] < upper)) %>% summarise(mean(z2sleep))
resData %>% mutate(cover = (beta[8] > lower)*(beta[8] < upper)) %>% summarise(mean(est))
resData %>% mutate(cover = (beta[8] > lower)*(beta[8] < upper)) %>% summarise(mean(est)-beta["z2sleep"])
resData %>% mutate(cover = (beta[8] > lower)*(beta[8] < upper)) %>% summarise(bias = mean(est)-beta["z2sleep"])
resData %>% mutate(cover = (beta[8] > lower)*(beta[8] < upper))
resData %>% summarise(bias = mean(est)-beta["z2sleep"])
resData %>% mutate(cover = (beta[8] > lower)*(beta[8] < upper)) %>% aggregate(coverage = mean(cover))
resData %>% mutate(cover = (beta[8] > lower)*(beta[8] < upper)) %>% summarise(coverage = mean(cover))
tau
VarCorr(fit1)
rt(27, 3)*tau/(sqrt(3/(3-2)))
rt(10000, 3)*tau/(sqrt(3/(3-2)))
sd(rt(10000, 3)*tau/(sqrt(3/(3-2))))
tau
sd(rt(100000, 3)*tau/(sqrt(3/(3-2))))
sd(rt(1000000, 3)*tau/(sqrt(3/(3-2))))
sd(rt(1000000, 3)*tau/(sqrt(3/(3-2))))
tau
